@attribute [Microsoft.AspNetCore.Components.RouteAttribute(ConstantsUrl.CompteClubFormulaire)]

@inject IPersonneService PersonneService
@inject IGroupeService GroupeService
@inject NavigationManager NavManager
@inject IJSRuntime jsRuntime
@inject NotifierTitleService NotifierTitle

<div class="box-create">
    <EditForm Model="@compteClubFormulaireViewModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="mat-layout-grid">
            <div class="mat-layout-grid-inner">
                <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">

                    <p>
                        <RadzenLabel Text="Qui ?" Style="width:100%" />
                        <RadzenDropDown Data="personneViewModelList"
                                        @bind-Value=@compteClubFormulaireViewModel.PersonneViewModel
                                        AllowClear="true"
                                        AllowFiltering="true"
                                        Style="width:100%"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        TextProperty="Nom">
                        </RadzenDropDown>
                    </p>

                    <MatButton Class="save" Type="submit" Raised="true" Icon="done">Valider</MatButton>
                    <MatButton Class="cancel" Type="button" Outlined="true" OnClick="@Cancel" Icon="clear">Annuler</MatButton>
                </div>
            </div>
        </div>
    </EditForm>
</div>

@code {
    private CompteClubFormulaireViewModel compteClubFormulaireViewModel = new CompteClubFormulaireViewModel();


    private List<GroupeViewModel> groupeViewModelList = new List<GroupeViewModel>();
    private List<PersonneViewModel> personneViewModelList = new List<PersonneViewModel>();

    protected override async Task OnInitializedAsync()
    {
        await NotifierTitle.Update(Lost.SharedLib.Constants.TitleTransactionCreateOrEdit);

        personneViewModelList = (await PersonneService.GetPersonneFromGroupe(1)).ToList();
    }


    private void HandleValidSubmit()
    {
        //Task.Run(async () => await BilletService.AddOrUpdateAsync(billetViewModel)).Wait();

        NavManager.NavigateTo(ConstantsUrl.CompteClubIndex);

    }

    public void Cancel()
    {
        NavManager.NavigateTo(ConstantsUrl.CompteClubIndex);
    }
}
